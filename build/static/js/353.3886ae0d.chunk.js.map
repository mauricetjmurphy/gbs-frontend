{"version":3,"file":"static/js/353.3886ae0d.chunk.js","mappings":"4PA8DA,EAjDgD,SAACA,GAC/C,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAACC,EAAA,GAAI,CACHC,MAAI,EACJC,GAAI,EACJC,GAAI,GACJC,QAAS,WACPN,EAAS,YAAD,OAAaD,EAAMQ,IAC7B,EAAE,WAEF,SAACC,EAAA,EAAG,WACF,gBACEC,OAAM,yKAINC,MAAM,yFACNC,IAAG,6BACHC,IAAKb,EAAMc,MACXC,MAAO,CAAEC,MAAO,aAGpB,UAACP,EAAA,EAAG,CACFQ,GAAI,CAAEC,UAAW,OAAQF,MAAO,OAAQG,QAAS,qBAAsB,WAEvE,SAACC,EAAA,EAAU,CACTC,QAAQ,KACRC,UAAU,KACVC,MAAM,OACNC,cAAY,EACZP,GAAI,CACF,UAAW,CACTQ,eAAgB,cAElB,SAEDzB,EAAMc,SAET,SAACM,EAAA,EAAU,CAACH,GAAI,CAAC,EAAGI,QAAS,QAASC,UAAW,IAAI,SAClD,UAAGtB,EAAM0B,KAAKC,WAAW,GAAGC,MAAM,KAAK,GAAE,eACrC5B,EAAM0B,KAAKC,WAAW,GAAGC,MAAM,KAAK,GAAE,YAKrD,EC7CaC,EAA+C,SAAC7B,GAAW,IAAD,GACnD8B,EAAAA,EAAAA,KAAVd,MAER,OACE,SAACb,EAAA,GAAI,CACH4B,cAAe,EACfC,WAAY,EACZC,WAAS,EACThB,GAAI,CAAEiB,WAAY,OAAQf,QAAS,QAAS,SAEjC,QAFiC,EAE3CnB,EAAMmC,YAAI,aAAV,EAAYC,KAAI,SAAChC,GAAU,OAC1B,SAAC,EAAW,CAEVI,GAAIJ,EAAKI,GACTM,MAAOV,EAAKU,MACZuB,UAAWjC,EAAKiC,UAChBX,KAAMtB,EAAKsB,OAJNY,EAAAA,EAAAA,MAKL,KAIV,E,8BCSA,EAlC0C,SAACtC,GACzC,OAOIuC,EAAAA,EAAAA,YAAWC,EAAAA,GAAe,IAN5BC,SAAAA,OAAQ,MAAG,GAAE,EACbC,EAAa,EAAbA,cACAC,EAAW,EAAXA,YAAY,EAAD,EACXC,YAAAA,OAAW,MAAG,GAAE,EAChBC,EAAgB,EAAhBA,iBACAC,EAAc,EAAdA,eAGF,GAAIJ,GAAiBG,EACnB,OAAO,SAACE,EAAA,EAAO,IAGjB,GAAIJ,GAAeG,EACjB,OACE,SAACrC,EAAA,EAAG,CAACuC,QAAS,OAAQC,eAAgB,SAAUC,WAAY,SAAS,UACnE,uBAAG,4BAKT,IAAMf,EAAI,kBAAOS,IAAW,OAAKH,IAEjC,OACE,SAAC,KAAU,WACT,UAAC,KAAa,CAAC3B,MAAO,oBAAqBqC,YAAa,GAAG,WACzD,SAACC,EAAA,EAAS,CAACtC,MAAO,kBAClB,SAACe,EAAe,CAACM,KAAMA,EAAMkB,UAAW,qBAIhD,C","sources":["features/articles/components/ArticleCard.tsx","features/articles/components/AllArticlesList.tsx","features/articles/routes/Articles.tsx"],"sourcesContent":["import React from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { Box, Grid, Typography } from \"@mui/material\";\n\nimport { Section } from \"../../home/types\";\n\ninterface ArticleCardProps {\n  id: string;\n  title: string;\n  image_url: string | undefined;\n  body: Section;\n}\n\nconst ArticleCard: React.FC<ArticleCardProps> = (props) => {\n  const navigate = useNavigate();\n\n  return (\n    <Grid\n      item\n      md={3}\n      xs={12}\n      onClick={() => {\n        navigate(`/article/${props.id}`);\n      }}\n    >\n      <Box>\n        <img\n          srcSet={`/images/SM-placeholder.png 640w,\n          /imagesSM-placeholder.png 960w, \n          /images/SM-placeholder.png 1280w, \n          /images/SM-placeholder.png 1920w`}\n          sizes=\"(max-width: 600px) 640px, (max-width: 960px) 960px, (max-width: 1280px) 1280px, 1920px\"\n          src={`/images/SM-placeholder.png`}\n          alt={props.title}\n          style={{ width: \"100%\" }}\n        />\n      </Box>\n      <Box\n        sx={{ textAlign: \"left\", width: \"100%\", padding: \"10px 0px 20px 0px\" }}\n      >\n        <Typography\n          variant=\"h3\"\n          component=\"h1\"\n          color=\"#000\"\n          gutterBottom\n          sx={{\n            \"&:hover\": {\n              textDecoration: \"underline\",\n            },\n          }}\n        >\n          {props.title}\n        </Typography>\n        <Typography sx={{}} variant={\"body2\"} component={\"p\"}>\n          {`${props.body.paragraphs[0].split(\".\")[0]}.` +\n            `${props.body.paragraphs[0].split(\".\")[1]}.`}\n        </Typography>\n      </Box>\n    </Grid>\n  );\n};\n\nexport default ArticleCard;\n","import React from \"react\";\nimport { Grid } from \"@mui/material\";\nimport { nanoid } from \"nanoid\";\n\nimport { useWindowSize } from \"../../../hooks/useWindowSize\";\nimport { ListHeading } from \"../../home/components/LatestArticles/ListHeading\";\nimport { Card } from \"../../home/types\";\n\nimport ArticleCard from \"./ArticleCard\";\n\ninterface BlogCardListProps {\n  data: Card[] | undefined;\n  listTitle: string;\n}\n\nexport const AllArticlesList: React.FC<BlogCardListProps> = (props) => {\n  const { width } = useWindowSize();\n\n  return (\n    <Grid\n      columnSpacing={3}\n      rowSpacing={2}\n      container\n      sx={{ background: \"#fff\", padding: \"20px\" }}\n    >\n      {props.data?.map((item: Card) => (\n        <ArticleCard\n          key={nanoid()}\n          id={item.id}\n          title={item.title}\n          image_url={item.image_url}\n          body={item.body}\n        />\n      ))}\n    </Grid>\n  );\n};\n","import { useContext } from \"react\";\nimport { Box } from \"@mui/material\";\n\nimport { ContentLayout, MainLayout } from \"../../global\";\nimport { AllArticlesList } from \"../components/AllArticlesList\";\nimport { Spinner } from \"../../../components/Spinner/Spinner\";\nimport { PageTitle } from \"../../../components/PageTitle/PageTitle\";\nimport { ArticleContext } from \"../../../state/ArticleCtx\";\n\ntype ArticlesProps = {};\n\nconst Articles: React.FC<ArticlesProps> = (props) => {\n  const {\n    techData = [],\n    techIsLoading,\n    techIsError,\n    climateData = [],\n    climateIsLoading,\n    climateIsError,\n  } = useContext(ArticleContext);\n\n  if (techIsLoading || climateIsLoading) {\n    return <Spinner />;\n  }\n\n  if (techIsError || climateIsError) {\n    return (\n      <Box display={\"flex\"} justifyContent={\"center\"} alignItems={\"center\"}>\n        <p>Failed to fetch data!</p>\n      </Box>\n    );\n  }\n\n  const data = [...climateData, ...techData];\n\n  return (\n    <MainLayout>\n      <ContentLayout title={\"All Blog Articles\"} description={\"\"}>\n        <PageTitle title={\"All Articles\"} />\n        <AllArticlesList data={data} listTitle={\"All Articles\"} />\n      </ContentLayout>\n    </MainLayout>\n  );\n};\n\nexport default Articles;\n"],"names":["props","navigate","useNavigate","Grid","item","md","xs","onClick","id","Box","srcSet","sizes","src","alt","title","style","width","sx","textAlign","padding","Typography","variant","component","color","gutterBottom","textDecoration","body","paragraphs","split","AllArticlesList","useWindowSize","columnSpacing","rowSpacing","container","background","data","map","image_url","nanoid","useContext","ArticleContext","techData","techIsLoading","techIsError","climateData","climateIsLoading","climateIsError","Spinner","display","justifyContent","alignItems","description","PageTitle","listTitle"],"sourceRoot":""}