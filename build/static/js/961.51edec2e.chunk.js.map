{"version":3,"file":"static/js/961.51edec2e.chunk.js","mappings":"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","sources":["features/legal/components/contactForm.styles.ts","features/legal/components/ContactForm.tsx","features/legal/routes/Support.tsx"],"sourcesContent":["export const contactFormStyles = {\n  input: (width: number) => ({\n    width: \"100%\",\n    background: \"#faf5f5\",\n    padding: \"15px\",\n    border: \"none\",\n    borderRadius: \"4px\",\n    fontFamily: \"Poppins-regular\",\n    fontSize: \"16px\",\n  }),\n  textArea: (width: number) => ({\n    width: \"100%\",\n    background: \"#faf5f5\",\n    padding: \"15px\",\n    border: \"none\",\n    borderRadius: \"4px\",\n    fontFamily: \"Poppins-regular\",\n    fontSize: \"16px\",\n  }),\n  error: () => ({\n    fontSize: \"13px\",\n    color: \"#f41f1f\",\n    padding: \"4px\",\n  }),\n};\n","import React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { InputBase, Button, Grid } from \"@mui/material\";\n\nimport { API_URL } from \"../../../config\";\nimport { useWindowSize } from \"../../../hooks/useWindowSize\";\n\nimport { contactFormStyles } from \"./contactForm.styles\";\n\nconst initialValues = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  message: \"\",\n};\n\nconst validationSchema = Yup.object({\n  firstName: Yup.string().required(\"Required\"),\n  lastName: Yup.string().required(\"Required\"),\n  email: Yup.string().email(\"Invalid email format\").required(\"Required\"),\n  message: Yup.string().required(\"Required\"),\n});\n\nexport const ContactForm = () => {\n  const { width } = useWindowSize();\n  const formik = useFormik({\n    initialValues,\n    onSubmit: (values) => {\n      fetch(`${API_URL}/message`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(values),\n      })\n        .then((response) => response.json())\n        .then(() => {\n          console.log(\"Message sent successfully\");\n          formik.resetForm();\n        })\n        .catch((error) => console.error(error));\n    },\n    validationSchema,\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <Grid\n        columnSpacing={1}\n        rowSpacing={2}\n        container\n        flexDirection={{ sm: \"column\", md: \"row\" }}\n        sx={{\n          display: \"flex\",\n          margin: \"10px 0px\",\n        }}\n      >\n        <Grid item xs={12} md={6}>\n          <InputBase\n            style={contactFormStyles.input(width)}\n            type=\"text\"\n            name=\"firstName\"\n            placeholder=\"First Name\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.firstName}\n          />\n          {formik.touched.firstName && formik.errors.firstName && (\n            <div style={contactFormStyles.error()}>\n              {formik.errors.firstName}\n            </div>\n          )}\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <InputBase\n            style={contactFormStyles.input(width)}\n            type=\"text\"\n            name=\"lastName\"\n            placeholder=\"Last Name\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.lastName}\n          />\n          {formik.touched.lastName && formik.errors.lastName && (\n            <div style={contactFormStyles.error()}>\n              {formik.errors.lastName}\n            </div>\n          )}\n        </Grid>\n\n        <Grid item xs={12} md={12} sx={{}}>\n          <InputBase\n            style={contactFormStyles.input(width)}\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.email}\n          />\n          {formik.touched.email && formik.errors.email && (\n            <div style={contactFormStyles.error()}>{formik.errors.email}</div>\n          )}\n        </Grid>\n\n        <Grid item xs={12} md={12} sx={{}}>\n          <textarea\n            style={contactFormStyles.textArea(width)}\n            name=\"message\"\n            placeholder=\"Message\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.message}\n          />\n          {formik.touched.message && formik.errors.message && (\n            <div style={contactFormStyles.error()}>{formik.errors.message}</div>\n          )}\n        </Grid>\n      </Grid>\n\n      <Button\n        sx={{ marginLeft: \"8px\" }}\n        type=\"submit\"\n        color={\"inherit\"}\n        variant=\"contained\"\n      >\n        Submit\n      </Button>\n    </form>\n  );\n};\n","import React from \"react\";\nimport { Box, Grid, Typography } from \"@mui/material\";\n\nimport { ContactForm } from \"../components/ContactForm\";\nimport { useWindowSize } from \"../../../hooks/useWindowSize\";\nimport { SocialLinks } from \"../../../components/SocialMedia/SocialLinks\";\nimport { MainLayout, ContentLayout } from \"../../global\";\n\ninterface SupportProps {}\n\nconst Support: React.FC<SupportProps> = (props) => {\n  const { width } = useWindowSize();\n\n  return (\n    <MainLayout>\n      <ContentLayout title={\"Support Page\"} description={\"\"}>\n        <Grid\n          container\n          padding={{ xs: \"20px\", sm: \"50px\" }}\n          sx={{\n            background: \"#fff\",\n            margin: \"50px 0px\",\n          }}\n        >\n          <Grid padding={{ xs: \"10px\", sm: \"30px\" }} item xs={12} md={6}>\n            <Typography sx={{ paddingLeft: \"8px\" }} variant=\"h1\" component=\"h1\">\n              Contact Us\n            </Typography>\n            <ContactForm />\n          </Grid>\n          <Grid padding={{ xs: \"10px\", sm: \"30px\" }} item xs={12} md={6}>\n            <Box sx={{ paddingBottom: \"30px\" }}>\n              <Typography variant=\"h1\" component={\"h1\"} gutterBottom>\n                Contact Information\n              </Typography>\n              <Typography variant=\"body2\" component=\"p\">\n                Please note that we receive a high volume of emails, so it may\n                take us some time to respond. We appreciate your patience and\n                understanding.\n              </Typography>\n            </Box>\n\n            <Box sx={{ paddingBottom: \"30px\" }}>\n              <Typography variant=\"h1\" component={\"h1\"} gutterBottom>\n                Follow Us\n              </Typography>\n              <Box>\n                <SocialLinks color={\"#000\"} position={\"start\"} />\n              </Box>\n            </Box>\n\n            <Box>\n              <Typography variant=\"body2\">\n                Thank you for visiting our website. We look forward to hearing\n                from you!\n              </Typography>\n            </Box>\n          </Grid>\n        </Grid>\n      </ContentLayout>\n    </MainLayout>\n  );\n};\n\nexport default Support;\n"],"names":["contactFormStyles","width","background","padding","border","borderRadius","fontFamily","fontSize","color","initialValues","firstName","lastName","email","message","validationSchema","Yup","required","ContactForm","useWindowSize","formik","useFormik","onSubmit","values","fetch","API_URL","method","headers","body","JSON","stringify","then","response","json","console","log","resetForm","catch","error","handleSubmit","Grid","columnSpacing","rowSpacing","container","flexDirection","sm","md","sx","display","margin","item","xs","InputBase","style","type","name","placeholder","onChange","handleChange","onBlur","handleBlur","value","touched","errors","Button","marginLeft","variant","props","title","description","Typography","paddingLeft","component","Box","paddingBottom","gutterBottom","SocialLinks","position"],"sourceRoot":""}