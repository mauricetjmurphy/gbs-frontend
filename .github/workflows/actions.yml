name: Deploy

on:
  push:
    branches:
      - dev

jobs:
  build-and-deploy-frontend:
    name: Build and Deploy Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install apt-transport-https curl
          curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
          echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
          sudo apt update
          sudo apt install yarn
          yarn --version
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          yarn install
      - name: Build the app
        run: |
          cross-env $(cat .env.production) yarn build:dev
          echo "REACT_APP_API_URL: $REACT_APP_API_URL"
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Deploy to S3
        run: |
          aws s3 sync build/ s3://gpt-blog-dev-web --delete
      - name: Clean up environment files
        run: |
          rm build/.env.production build/.env.staging build/.env.development
          aws cloudfront create-invalidation --distribution-id "E3K2LH4M35U8R" --paths '/*'

# name: Deploy to S3

# on:
#   push:
#     branches:
#       - dev

# env:
#   AWS_REGION: us-east-1
#   AWS_BUCKET: gpt-blog-dev-web

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up Node.js
#         uses: actions/setup-node@v2
#         with:
#           node-version: 14

#       - name: Install dependencies
#         run: |
#           yarn install

#       - name: Copy environment files
#         run: |
#           cp .env.production .env.staging .env.development build/

#       - name: Build for production
#         run: |
#           cross-env $(cat build/.env.production) yarn build:prod

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ env.AWS_REGION }}

#       - name: Sync build files to S3
#         uses: actions/aws/cli@v1
#         with:
#           args: sync build/ s3://${{ env.AWS_BUCKET }}/

#       - name: Clean up environment files
#         run: |
#           rm build/.env.production build/.env.staging build/.env.development
#           aws cloudfront create-invalidation --distribution-id "E3K2LH4M35U8R" --paths '/*'
